services:
  backend:
    container_name: backend
    build: 
      context: backend
      dockerfile: ../backend/Dockerfile
    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    stdin_open: true
    tty: true
    env_file:
      - ".env"
    depends_on:
      - postgres

  frontend:
    container_name: frontend
    build: 
      context: frontend
      dockerfile: ../frontend/Dockerfile
    volumes:
      - ./frontend:/app/frontend
      - node-modules:/app/frontend/node_modules
    ports:
      - "3000:3000"
    env_file:
      - ".env"
    depends_on:
      - backend

  postgres:
    container_name: postgres
    env_file:
      - ".env"
    image: "postgres:14.4-bullseye"
    stop_grace_period: "3s"
    volumes:
      - "postgres:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs:/etc/nginx/certs
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend

volumes:
  postgres:
  node-modules: